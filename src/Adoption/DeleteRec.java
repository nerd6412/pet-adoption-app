/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Adoption;

import java.awt.Color;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;

/**
 *
 * @author Joax
 */
public class DeleteRec extends javax.swing.JInternalFrame {
    Connection con;
    /**
     * Creates new form DeleteRec
     */
    public DeleteRec() {
        initComponents();
        
        String url = "jdbc:mysql://localhost:3306/pet_adoption?serverTimezone=UTC";
        String username = "root";
        String password = "Czar!na12";
        try{
            con = DriverManager.getConnection(url,username,password);
        }catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            // Handle any database errors here
        }
        
        this.setBorder (javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi;
        bi = (BasicInternalFrameUI)this.getUI();
        bi.setNorthPane(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        DELgenID = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        DELtextarea = new javax.swing.JTextArea();
        delBTN = new Home.landingPage.Button();
        searchBTN = new Home.landingPage.Button();

        jPanel1.setBackground(new java.awt.Color(219, 180, 167));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel1.setText("Applicant ID:");

        DELgenID.setFont(new java.awt.Font("Corbel", 0, 12)); // NOI18N
        DELgenID.setForeground(new java.awt.Color(153, 153, 153));
        DELgenID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        DELgenID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                DELgenIDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                DELgenIDFocusLost(evt);
            }
        });
        DELgenID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELgenIDActionPerformed(evt);
            }
        });

        DELtextarea.setColumns(20);
        DELtextarea.setRows(5);
        jScrollPane1.setViewportView(DELtextarea);

        delBTN.setForeground(new java.awt.Color(51, 51, 51));
        delBTN.setText("Delete Record");
        delBTN.setColor1(new java.awt.Color(226, 226, 226));
        delBTN.setColor2(new java.awt.Color(149, 182, 108));
        delBTN.setFont(new java.awt.Font("Corbel", 1, 12)); // NOI18N
        delBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBTNActionPerformed(evt);
            }
        });

        searchBTN.setForeground(new java.awt.Color(51, 51, 51));
        searchBTN.setText("Search");
        searchBTN.setColor1(new java.awt.Color(226, 226, 226));
        searchBTN.setColor2(new java.awt.Color(149, 182, 108));
        searchBTN.setFont(new java.awt.Font("Corbel", 1, 12)); // NOI18N
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(DELgenID, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(DELgenID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(429, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void DELgenIDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELgenIDFocusGained
        if (DELgenID.getText().equals("Generated ID")) {
        DELgenID.setText("");
        DELgenID.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_DELgenIDFocusGained

    private void DELgenIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_DELgenIDFocusLost
        if (DELgenID.getText().equals("")) {
        DELgenID.setText("Generated ID");
        DELgenID.setForeground(new Color(153, 153, 153));
        }
    }//GEN-LAST:event_DELgenIDFocusLost

    private void DELgenIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELgenIDActionPerformed
   
    }//GEN-LAST:event_DELgenIDActionPerformed

    private void delBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBTNActionPerformed
        try {
            // Ask for confirmation before deleting the record
            int option = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this record?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);

            if (option == JOptionPane.YES_OPTION) { // If user confirmed deletion
                String sql = "DELETE FROM applicant WHERE applicant_id = ?";
                PreparedStatement pst = con.prepareStatement(sql);
                pst.setInt(1, Integer.parseInt(DELgenID.getText()));
                int rowsDeleted = pst.executeUpdate();

                if (rowsDeleted > 0) {
                    DELtextarea.setText("");
                    JOptionPane.showMessageDialog(this, "Record deleted successfully!");
                } else {
                    JOptionPane.showMessageDialog(this, "Record not found!");
                }
            } else {
                // User canceled the deletion, do nothing or display a message
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());    // Handle any database errors here
        }
    }//GEN-LAST:event_delBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        
        try {
        String sql = "SELECT * FROM applicant WHERE applicant_id = ?";
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setInt(1, Integer.parseInt(DELgenID.getText()));
        ResultSet rs = pst.executeQuery();

        if (rs.next()) {
            int applicantId = rs.getInt("applicant_id");
            String appName = rs.getString("app_name");
            int appAge = rs.getInt("app_age");
            String appNationality = rs.getString("app_nationality");
            String address = rs.getString("address");
            String cell_no = rs.getString("cell_no");
            String tel_no = rs.getString("tel_no");
            String home_type = rs.getString("home_type");
            String pet_allowed = rs.getString("pet_allowed");
            String home_tenure = rs.getString("home_tenure");
            String current_pet = rs.getString("current_pet");

            DELtextarea.setText("Applicant ID: " + applicantId + "\n"
                    + "Name: " + appName + "\n"
                    + "Age: " + appAge + "\n"
                    + "Nationality: " + appNationality + "\n"
                    + "Address: " + address + "\n"
                    + "Cellphone Number: " + cell_no + "\n"
                    + "Telephone Number: " + tel_no + "\n"
                    + "Home Type: " + home_type + "\n"
                    + "Pets Allowed? : " + pet_allowed + "\n"
                    + "Home Tenured?: " + home_tenure + "\n"
                    + "Currently Has A Pet?: " + current_pet);
                       
            } else {
                JOptionPane.showMessageDialog(this, "Record not found!");
            }
        } catch (SQLException ex) {
            System.out.println("Error: " + ex.getMessage());
            // Handle any database errors here  
    }//GEN-LAST:event_searchBTNActionPerformed

   }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DELgenID;
    private javax.swing.JTextArea DELtextarea;
    private Home.landingPage.Button delBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private Home.landingPage.Button searchBTN;
    // End of variables declaration//GEN-END:variables
}
